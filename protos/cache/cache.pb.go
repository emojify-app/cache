// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cache.proto

package cache

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_ServingStatus = 2
)

var HealthCheckResponse_ServingStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "SERVING",
	2: "NOT_SERVING",
}
var HealthCheckResponse_ServingStatus_value = map[string]int32{
	"UNKNOWN":     0,
	"SERVING":     1,
	"NOT_SERVING": 2,
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return proto.EnumName(HealthCheckResponse_ServingStatus_name, int32(x))
}
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cache_3baf5c1984e7e6cd, []int{2, 0}
}

type CacheItem struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheItem) Reset()         { *m = CacheItem{} }
func (m *CacheItem) String() string { return proto.CompactTextString(m) }
func (*CacheItem) ProtoMessage()    {}
func (*CacheItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_3baf5c1984e7e6cd, []int{0}
}
func (m *CacheItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheItem.Unmarshal(m, b)
}
func (m *CacheItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheItem.Marshal(b, m, deterministic)
}
func (dst *CacheItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheItem.Merge(dst, src)
}
func (m *CacheItem) XXX_Size() int {
	return xxx_messageInfo_CacheItem.Size(m)
}
func (m *CacheItem) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheItem.DiscardUnknown(m)
}

var xxx_messageInfo_CacheItem proto.InternalMessageInfo

func (m *CacheItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CacheItem) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type HealthCheckRequest struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheckRequest) Reset()         { *m = HealthCheckRequest{} }
func (m *HealthCheckRequest) String() string { return proto.CompactTextString(m) }
func (*HealthCheckRequest) ProtoMessage()    {}
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_3baf5c1984e7e6cd, []int{1}
}
func (m *HealthCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckRequest.Unmarshal(m, b)
}
func (m *HealthCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckRequest.Marshal(b, m, deterministic)
}
func (dst *HealthCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckRequest.Merge(dst, src)
}
func (m *HealthCheckRequest) XXX_Size() int {
	return xxx_messageInfo_HealthCheckRequest.Size(m)
}
func (m *HealthCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckRequest proto.InternalMessageInfo

func (m *HealthCheckRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type HealthCheckResponse struct {
	Status               HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=HealthCheckResponse_ServingStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *HealthCheckResponse) Reset()         { *m = HealthCheckResponse{} }
func (m *HealthCheckResponse) String() string { return proto.CompactTextString(m) }
func (*HealthCheckResponse) ProtoMessage()    {}
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_3baf5c1984e7e6cd, []int{2}
}
func (m *HealthCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckResponse.Unmarshal(m, b)
}
func (m *HealthCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckResponse.Marshal(b, m, deterministic)
}
func (dst *HealthCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckResponse.Merge(dst, src)
}
func (m *HealthCheckResponse) XXX_Size() int {
	return xxx_messageInfo_HealthCheckResponse.Size(m)
}
func (m *HealthCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckResponse proto.InternalMessageInfo

func (m *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if m != nil {
		return m.Status
	}
	return HealthCheckResponse_UNKNOWN
}

func init() {
	proto.RegisterType((*CacheItem)(nil), "CacheItem")
	proto.RegisterType((*HealthCheckRequest)(nil), "HealthCheckRequest")
	proto.RegisterType((*HealthCheckResponse)(nil), "HealthCheckResponse")
	proto.RegisterEnum("HealthCheckResponse_ServingStatus", HealthCheckResponse_ServingStatus_name, HealthCheckResponse_ServingStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CacheClient is the client API for Cache service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CacheClient interface {
	Check(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
	Put(ctx context.Context, in *CacheItem, opts ...grpc.CallOption) (*wrappers.StringValue, error)
	Get(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*CacheItem, error)
	Exists(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*wrappers.BoolValue, error)
}

type cacheClient struct {
	cc *grpc.ClientConn
}

func NewCacheClient(cc *grpc.ClientConn) CacheClient {
	return &cacheClient{cc}
}

func (c *cacheClient) Check(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := c.cc.Invoke(ctx, "/Cache/Check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheClient) Put(ctx context.Context, in *CacheItem, opts ...grpc.CallOption) (*wrappers.StringValue, error) {
	out := new(wrappers.StringValue)
	err := c.cc.Invoke(ctx, "/Cache/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheClient) Get(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*CacheItem, error) {
	out := new(CacheItem)
	err := c.cc.Invoke(ctx, "/Cache/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheClient) Exists(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*wrappers.BoolValue, error) {
	out := new(wrappers.BoolValue)
	err := c.cc.Invoke(ctx, "/Cache/Exists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CacheServer is the server API for Cache service.
type CacheServer interface {
	Check(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
	Put(context.Context, *CacheItem) (*wrappers.StringValue, error)
	Get(context.Context, *wrappers.StringValue) (*CacheItem, error)
	Exists(context.Context, *wrappers.StringValue) (*wrappers.BoolValue, error)
}

func RegisterCacheServer(s *grpc.Server, srv CacheServer) {
	s.RegisterService(&_Cache_serviceDesc, srv)
}

func _Cache_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Cache/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).Check(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cache_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CacheItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Cache/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).Put(ctx, req.(*CacheItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cache_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrappers.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Cache/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).Get(ctx, req.(*wrappers.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cache_Exists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrappers.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).Exists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Cache/Exists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).Exists(ctx, req.(*wrappers.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cache_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Cache",
	HandlerType: (*CacheServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Check",
			Handler:    _Cache_Check_Handler,
		},
		{
			MethodName: "Put",
			Handler:    _Cache_Put_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Cache_Get_Handler,
		},
		{
			MethodName: "Exists",
			Handler:    _Cache_Exists_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cache.proto",
}

func init() { proto.RegisterFile("cache.proto", fileDescriptor_cache_3baf5c1984e7e6cd) }

var fileDescriptor_cache_3baf5c1984e7e6cd = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xc1, 0x4e, 0xfa, 0x40,
	0x10, 0xc6, 0x69, 0xff, 0x7f, 0x20, 0x0c, 0x8a, 0x64, 0xf0, 0x40, 0x1a, 0x63, 0xc8, 0x9e, 0x38,
	0x2d, 0x11, 0x6f, 0x1c, 0x45, 0x82, 0xc4, 0xa4, 0x98, 0x56, 0xf1, 0x68, 0x96, 0x32, 0x96, 0xc6,
	0xca, 0xd6, 0xee, 0x56, 0x7d, 0x09, 0x9f, 0xd3, 0xd7, 0x30, 0x5d, 0xa8, 0x91, 0x40, 0xf4, 0xb6,
	0x33, 0xdf, 0xf7, 0x9b, 0xd9, 0xf9, 0xa0, 0x1e, 0x88, 0x60, 0x49, 0x3c, 0x49, 0xa5, 0x96, 0xce,
	0x69, 0x28, 0x65, 0x18, 0x53, 0xcf, 0x54, 0xf3, 0xec, 0xb1, 0xf7, 0x96, 0x8a, 0x24, 0xa1, 0x54,
	0xad, 0x75, 0xd6, 0x83, 0xda, 0x30, 0xb7, 0x4f, 0x34, 0x3d, 0x63, 0x03, 0xec, 0x68, 0xd1, 0xb6,
	0x3a, 0x56, 0xb7, 0xe6, 0xd9, 0xd1, 0x02, 0x11, 0xfe, 0x2f, 0x84, 0x16, 0x6d, 0xbb, 0x63, 0x75,
	0x0f, 0x3c, 0xf3, 0x66, 0x1c, 0xf0, 0x8a, 0x44, 0xac, 0x97, 0xc3, 0x25, 0x05, 0x4f, 0x1e, 0xbd,
	0x64, 0xa4, 0x34, 0xb6, 0xa1, 0xaa, 0x28, 0x7d, 0x8d, 0x02, 0xda, 0xe0, 0x45, 0xc9, 0x3e, 0x2c,
	0x68, 0x6d, 0x01, 0x2a, 0x91, 0x2b, 0x45, 0x38, 0x80, 0x8a, 0xd2, 0x42, 0x67, 0xca, 0x00, 0x8d,
	0x3e, 0xe3, 0x7b, 0x5c, 0xdc, 0xcf, 0xa7, 0xac, 0x42, 0xdf, 0x38, 0xbd, 0x0d, 0xc1, 0x06, 0x70,
	0xb8, 0x25, 0x60, 0x1d, 0xaa, 0x77, 0xee, 0xb5, 0x3b, 0xbd, 0x77, 0x9b, 0xa5, 0xbc, 0xf0, 0x47,
	0xde, 0x6c, 0xe2, 0x8e, 0x9b, 0x16, 0x1e, 0x41, 0xdd, 0x9d, 0xde, 0x3e, 0x14, 0x0d, 0xbb, 0xff,
	0x69, 0x41, 0xd9, 0x5c, 0x8c, 0x7d, 0x28, 0x9b, 0x65, 0xd8, 0xe2, 0xbb, 0x17, 0x39, 0xc7, 0xfb,
	0xfe, 0x83, 0x67, 0xf0, 0xef, 0x26, 0xd3, 0x08, 0xfc, 0x3b, 0x34, 0xe7, 0x84, 0xaf, 0x23, 0xe6,
	0x45, 0xc4, 0xdc, 0xd7, 0x69, 0xb4, 0x0a, 0x67, 0x22, 0xce, 0x88, 0x95, 0x72, 0x64, 0x4c, 0x1a,
	0x7f, 0xb5, 0x39, 0x3f, 0x06, 0xb2, 0x12, 0x5e, 0x42, 0x65, 0xf4, 0x1e, 0x29, 0xad, 0xfe, 0xa0,
	0x9c, 0x1d, 0xf5, 0x42, 0xca, 0x78, 0xb3, 0x78, 0x5e, 0x31, 0xdd, 0xf3, 0xaf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x39, 0x39, 0xf2, 0x7c, 0x10, 0x02, 0x00, 0x00,
}
